import React from "react";
import clsx from "clsx";

import styles from "@/styles/components/atoms/_button.module.scss";

interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  children: React.ReactNode;
  variant?: "primary" | "secondary" | "danger" | "outline";
  isLoading?: boolean;
}

const Button: React.FC<ButtonProps> = ({
  children,
  variant = "primary",
  isLoading = false,
  className = "",
  disabled,
  ...props
}) => {
  return (
    <button
      className={clsx(styles.button, styles[`button--${variant}`], className)}
      disabled={disabled || isLoading}
      {...props}
    >
      {isLoading ? (
        <span className={styles["button__loader"]}></span>
      ) : (
        children
      )}
    </button>
  );
};

export default Button;

/**
 rateMyStartup-main/
â”‚â”€â”€ prisma/  
â”‚â”€â”€ public/  
â”‚â”€â”€ src/  
â”‚   â”œâ”€â”€ app/  
â”‚   â”‚   â”œâ”€â”€ layout.tsx  
â”‚   â”‚   â”œâ”€â”€ page.tsx  
â”‚   â”‚   â”œâ”€â”€ add-startup/  
â”‚   â”‚   â”‚   â”œâ”€â”€ page.tsx  
â”‚   â”‚   â”œâ”€â”€ startup/  
â”‚   â”‚       â”œâ”€â”€ [id]/  
â”‚   â”‚       â”‚   â”œâ”€â”€ page.tsx  
â”‚   â”œâ”€â”€ components/  # ðŸ“Œ **Atomic Design KlasÃ¶rÃ¼**  
â”‚   â”‚   â”œâ”€â”€ atoms/  
â”‚   â”‚   â”‚   â”œâ”€â”€ Button.tsx  
â”‚   â”‚   â”‚   â”œâ”€â”€ Input.tsx  
â”‚   â”‚   â”‚   â”œâ”€â”€ LoadingSpinner.tsx  
â”‚   â”‚   â”œâ”€â”€ molecules/  
â”‚   â”‚   â”‚   â”œâ”€â”€ CommentForm.tsx  
â”‚   â”‚   â”‚   â”œâ”€â”€ StartupItem.tsx  
â”‚   â”‚   â”œâ”€â”€ organisms/  
â”‚   â”‚   â”‚   â”œâ”€â”€ Header.tsx  
â”‚   â”‚   â”‚   â”œâ”€â”€ StartupList.tsx  
â”‚   â”‚   â”‚   â”œâ”€â”€ StartupDetails.tsx  
â”‚   â”‚   â”œâ”€â”€ templates/  
â”‚   â”‚   â”‚   â”œâ”€â”€ MainLayout.tsx  
â”‚   â”‚   â”‚   â”œâ”€â”€ StartupDetailLayout.tsx  
â”‚   â”œâ”€â”€ redux/  
â”‚   â”‚   â”œâ”€â”€ ReduxProvider.tsx  
â”‚   â”‚   â”œâ”€â”€ startupSlice.ts  
â”‚   â”‚   â”œâ”€â”€ store.ts  
â”‚   â”œâ”€â”€ styles/  
â”‚   â”‚   â”œâ”€â”€ globals.scss  # Global stiller  
â”‚   â”‚   â”œâ”€â”€ abstracts/  # **SCSS DeÄŸiÅŸkenleri, Mixins ve Fonksiyonlar**  
â”‚   â”‚   â”‚   â”œâ”€â”€ _variables.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ _mixins.scss  
â”‚   â”‚   â”œâ”€â”€ base/  # **Genel site stilleri**  
â”‚   â”‚   â”‚   â”œâ”€â”€ _reset.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ _typography.scss  
â”‚   â”‚   â”œâ”€â”€ pages/  # **Sayfa bazlÄ± stiller**  
â”‚   â”‚   â”‚   â”œâ”€â”€ _home.module.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ _add-startup.module.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ _startup-detail.module.scss  
â”‚   â”‚   â”œâ”€â”€ components/  # **BileÅŸen bazlÄ± stiller**  
â”‚   â”‚   â”‚   â”œâ”€â”€ atoms/  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _button.module.scss  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _input.module.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ molecules/  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _comment-form.module.scss  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _startup-item.module.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ organisms/  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _header.module.scss  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _startup-list.module.scss  
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ _startup-details.module.scss  
â”‚   â”‚   â”œâ”€â”€ templates/  
â”‚   â”‚   â”‚   â”œâ”€â”€ _main-layout.module.scss  
â”‚   â”‚   â”‚   â”œâ”€â”€ _startup-detail-layout.module.scss  
â”‚â”€â”€ tailwind.config.ts  
â”‚â”€â”€ tsconfig.json  
â”‚â”€â”€ package.json  
â”‚â”€â”€ README.md  

 */
